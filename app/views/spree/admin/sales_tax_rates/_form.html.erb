<%- states = f.object.country && f.object.country.states ? f.object.country.states.sort : [] %>
<div data-hook="admin_sales_tax_rate_form_fields">
  <%= f.field_container :country do %>
    <%= f.label :country, Spree.t(:country) %>
    <%= f.collection_select :country_id, all_countries, :id, :name, { include_blank: true }, { class: 'select2 w-100' } %>
    <%= f.error_message_on :country %>
  <% end %>
  <%= f.field_container :state do %>
    <%= f.label :state, Spree.t(:state) %>
    <%= f.collection_select :state_id, states, :id, :name, {}, { class: 'select2 w-100', disabled: states.empty? } %>
    <%= f.error_message_on :state %>
  <% end %>
  <%= f.field_container :zip_code do %>
    <%= f.label :zip_code, Spree.t(:zip_code) %>
    <%= f.text_field :zip_code, class: 'form-control' %>
    <%= f.error_message_on :zip_code %>
  <% end %>
  <%= f.field_container :name do %>
    <%= f.label :name, Spree.t(:name) %>
    <%= f.text_field :name, class: 'form-control' %>
    <%= f.error_message_on :name %>
  <% end %>
  <%= f.field_container :rate do %>
    <%= f.label :rate, Spree.t(:rate) %>
    <%= f.text_field :rate, class: 'form-control' %>
    <%= f.error_message_on :rate %>
  <% end %>
</div>
<% content_for :head do %>
  <script>
    document.addEventListener("spree:load", function() {
      $('#sales_tax_rate_country_field select').on('change', function() { updateState('sales_tax_rate_'); });
    })

    function updateState(region, successCallback) {
      const countryId = $('#' + region + 'country_field select').val()
      const stateContainer = $('#' + region + 'state_field').parent()
      const stateSelect = $('#' + region + 'state_field select')
      const stateInput = $('#' + region + 'state_field input.state_name')

      if (!countryId) { return }

      fetch(Spree.routes.countries_api_v2 + '/' + countryId + '?include=states', {
        headers: Spree.apiV2Authentication()
      }).then((response) => {
        switch (response.status) {
          case 200:
            response.json().then((json) => {
              const states = json.included
              const statesRequired = json.data.attributes.states_required
              const stateSelectValue = stateSelect.val();
              if (states.length > 0) {
                stateSelect.html('')
                $.each(states, function (_pos, state) {
                  const opt = $(document.createElement('option'))
                    .prop('value', state.id)
                    .html(state.attributes.name)
                  stateSelect.append(opt).trigger('change')
                })
                stateSelect.prop('disabled', false).show()
                stateSelect.select2()
                if (stateSelectValue !== undefined) {
                  stateSelect.val(stateSelectValue).trigger('change')
                }
                stateInput.hide().prop('disabled', true)
                stateContainer.show()
              } else {
                stateSelect.val(null).trigger('change')
                if (stateSelect.data('select2')) {
                  stateSelect.select2('destroy')
                }
                stateSelect.hide()
                if (statesRequired) {
                  stateInput.prop('disabled', false).show()
                } else {
                  stateContainer.hide()
                }
              }
              if (successCallback) successCallback()
            })
          break
        }
      })
    }
  </script>
<% end %>